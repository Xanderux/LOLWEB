{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Living off the Legitimate Web (LOLWeb)","text":"<p>A curated knowledge base of techniques abusing legitimate web services for evasion, exfiltration, C2, and more.</p> <p></p>"},{"location":"#what-is-lolweb","title":"\ud83d\udd0d What is LOLWeb?","text":"<p>LOLWeb documents the offensive and post-exploitation use of legitimate cloud and web services to perform actions typically associated with malware or threat actors \u2014 but in a stealthy, often undetectable way.</p> <p>This technique category is inspired by Living off the Land (LOTL) but focuses on \"Living off the Legitimate Web\" \u2014 leveraging trusted services to blend in, bypass security controls, and avoid detection.</p>"},{"location":"#objectives","title":"\ud83c\udfaf Objectives","text":"<ul> <li>\ud83d\udcda Maintain a living knowledge base of known abuse techniques per web service.</li> <li>\ud83e\udde0 Classify techniques by tactic: proxy tunneling, C2, phishing, exfiltration...</li> <li>\ud83d\udd34 Assist red teams in understanding what's possible with no infrastructure.</li> </ul>"},{"location":"about/","title":"About","text":""},{"location":"about/#contribute","title":"\ud83e\udd1d Contribute","text":"<p>This is a community-friendly project. We welcome contributions including:</p> <ul> <li>New service abuse techniques  </li> <li>Links to public research or PoCs  </li> <li>Improvements to the taxonomy or documentation</li> </ul> <p>Before contributing, please read our CONTRIBUTING.md for guidelines, templates, and scope</p> <p>Feel free to open a pull request on the LOLWEB repository.</p> <p>Maintained by Xanderux and the cybersecurity community \u2022 Inspired by LOLBAS and Unprotect.it</p>"},{"location":"services/cloudflare/","title":"Cloudflare","text":"","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/cloudflare/#description","title":"Description","text":"<p>Cloudflare is a widely used web service providing CDN, DDoS protection, and WAF capabilities to websites. It is available both as a free and paid service.</p> <p>Attackers can abuse Cloudflare to hide the real IP address of a malicious server. By registering a domain and routing it through Cloudflare, the true backend infrastructure becomes difficult to identify for defenders unless misconfiguration or information leakage occurs.</p>","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/cloudflare/#technique","title":"Technique","text":"<ul> <li>The attacker hosts a malicious server on a VPS or compromised host with a real public IP.</li> <li>A malicious domain is registered (e.g., <code>malicious-site.com</code>).</li> <li>The attacker configures Cloudflare to act as a reverse proxy for the domain, pointing it to the backend server.</li> <li>Cloudflare handles TLS termination, WAF, and caching.</li> <li>The backend server is often configured (manually) to only accept inbound traffic from Cloudflare IP ranges (<code>https://www.cloudflare.com/ips/</code>), preventing direct probing or bypass.</li> </ul> <p>This setup leverages SNI-based virtual hosting and HTTP Host headers to route traffic correctly behind shared Cloudflare IP addresses.</p>","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/cloudflare/#examples-of-abuse","title":"Examples of Abuse","text":"<ul> <li>IP masking via CDN: The true IP of the backend server remains obscured, making infrastructure takedown and attribution harder.</li> <li>Rotating domains while keeping the backend server unchanged and protected via CDN masking.</li> <li>A notable example is the Cloudflare IP 104.21.112[.]1, which has been reported by the community for hosting various malicious domains across different campaigns (Clickfix, Ghostspy, Gophish, Mythic, Raptor RAT...).</li> </ul>","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/cloudflare/#detection-and-mitigation","title":"Detection and Mitigation","text":"","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/cloudflare/#indicators","title":"Indicators","text":"<ul> <li>Monitor domain names with newly registered WHOIS pointing to Cloudflare IPs.</li> </ul>","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/cloudflare/#mitigation-strategies","title":"Mitigation Strategies","text":"<ul> <li>Focus on domain-based blocking and reputation rather than IP-based blocking, which may lead to collateral damage.</li> <li>Monitor for newly registered domains using Cloudflare, especially in phishing, malware, or fraud campaigns.</li> <li>Use passive TLS fingerprinting (JA3/JA4), DNS history, or traffic behavior to uncover misconfigured or leaking backends.</li> <li>Submit abuse reports to Cloudflare: https://abuse.cloudflare.com</li> </ul>","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/cloudflare/#references","title":"References","text":"<ul> <li>Cloudflare Abuse Report Form</li> <li>Understanding Reverse Proxies (Wikipedia)</li> <li>Cloudflare Developer Documentation</li> <li>Cloudflare IP Ranges</li> </ul>","tags":["IP masking via shared hosting/CDNs"]},{"location":"services/google_apps_script/","title":"Google Apps Script","text":"","tags":["Command and Control","Proxy Tunneling"]},{"location":"services/google_apps_script/#description","title":"Description","text":"<p>Google Apps Script is a cloud-based scripting platform that allows users to automate and extend Google Workspace applications (like Google Sheets, Docs, Gmail). It supports JavaScript code execution on Google servers, enabling powerful automation and integration.</p> <p>Attackers abuse Google Apps Script to execute malicious code, establish Command and Control (C2) channels, and tunnel network traffic through legitimate Google infrastructure, effectively bypassing traditional network defenses.</p>","tags":["Command and Control","Proxy Tunneling"]},{"location":"services/google_apps_script/#technique","title":"Technique","text":"<ul> <li>Create and deploy malicious scripts within Google Workspace accounts.</li> <li>Use Apps Script's service to make HTTP requests to external C2 servers or proxy requests.</li> <li>Leverage triggers and timed executions for persistence and stealth.</li> </ul>","tags":["Command and Control","Proxy Tunneling"]},{"location":"services/google_apps_script/#examples-of-abuse","title":"Examples of Abuse","text":"<ul> <li>Setting up a C2 channel by fetching commands from a remote server and executing them.</li> <li>Proxying traffic through Apps Script to bypass firewall rules.</li> <li>Exfiltrating data from compromised accounts via Sheets, Gmail, or Drive.</li> <li>Automating phishing emails using Gmail APIs.</li> </ul>","tags":["Command and Control","Proxy Tunneling"]},{"location":"services/google_apps_script/#detection-and-mitigation","title":"Detection and Mitigation","text":"","tags":["Command and Control","Proxy Tunneling"]},{"location":"services/google_apps_script/#indicators","title":"Indicators","text":"<ul> <li>Google Apps Scripts use their own IP ranges, which are published by Google in user-triggered-fetchers.json and user-triggered-fetchers-google.json. Monitor your infrastructure for an unusual number of requests originating from these IP ranges.</li> </ul>","tags":["Command and Control","Proxy Tunneling"]},{"location":"services/google_apps_script/#references","title":"References","text":"<ul> <li>Google Apps Script Official Documentation</li> </ul>","tags":["Command and Control","Proxy Tunneling"]},{"location":"services/google_calendar/","title":"Google Calendar","text":"","tags":["Command and Control","Data Exfiltration"]},{"location":"services/google_calendar/#description","title":"Description","text":"<p>Google Calendar is a widely used cloud service for scheduling and managing events. Attackers can abuse Google Calendar to perform covert Command and Control (C2) communications or data exfiltration by encoding information in calendar events, event descriptions, or metadata.</p>","tags":["Command and Control","Data Exfiltration"]},{"location":"services/google_calendar/#technique","title":"Technique","text":"<ul> <li>Creating and modifying calendar events to exchange encoded commands or data.</li> <li>Using event descriptions or titles to hide payloads or instructions.</li> <li>Leveraging shared calendars or invitations to communicate between compromised systems.</li> <li>Automating calendar updates via Google Calendar API to maintain stealthy communication channels.</li> </ul>","tags":["Command and Control","Data Exfiltration"]},{"location":"services/google_calendar/#examples-of-abuse","title":"Examples of Abuse","text":"<ul> <li>Exfiltrating data by encoding it into event descriptions or titles.</li> <li>Sending commands through scheduled events that infected hosts poll regularly.</li> <li>Using shared calendars as a covert channel to bypass network monitoring.</li> <li>Coordinating multi-stage attacks through calendar event updates.</li> </ul>","tags":["Command and Control","Data Exfiltration"]},{"location":"services/google_calendar/#detection-and-mitigation","title":"Detection and Mitigation","text":"","tags":["Command and Control","Data Exfiltration"]},{"location":"services/google_calendar/#indicators","title":"Indicators","text":"<ul> <li>Monitor your infrastructure for high frequency of requests to <code>https://www.googleapis.com/calendar/v3</code></li> </ul>","tags":["Command and Control","Data Exfiltration"]},{"location":"services/google_calendar/#references","title":"References","text":"<ul> <li>Google Calendar API Documentation</li> <li>Google Threat Intelligence Group, Mark Your Calendar: APT41 Innovative Tactics</li> </ul>","tags":["Command and Control","Data Exfiltration"]},{"location":"services/google_translate/","title":"Google Translate","text":"","tags":["Proxy Tunneling"]},{"location":"services/google_translate/#description","title":"Description","text":"<p>Google Translate is a widely used legitimate web service for translating text and web pages. Attackers can abuse Google Translate as a proxy tunneling mechanism by leveraging the URL parameter <code>u=</code> to access external web content indirectly, bypassing network restrictions and filtering.</p>","tags":["Proxy Tunneling"]},{"location":"services/google_translate/#technique","title":"Technique","text":"<ul> <li>Use the URL pattern: <code>https://translate.google.com/translate?u=&lt;target_url&gt;</code></li> <li>This makes Google Translate fetch the target URL and render its content inside Google\u2019s domain.</li> <li>Traffic appears as requests to <code>translate.google.com</code>, which is often whitelisted in corporate environments.</li> </ul>","tags":["Proxy Tunneling"]},{"location":"services/google_translate/#examples-of-abuse","title":"Examples of abuse","text":"<ul> <li>Exfiltrating data through crafted URLs.</li> <li>Command and Control (C2) communication by tunneling requests through Google Translate.</li> <li>Bypassing firewalls or web filters by hiding malicious requests behind Google Translate traffic.</li> </ul>","tags":["Proxy Tunneling"]},{"location":"services/google_translate/#detection-and-mitigation","title":"Detection and Mitigation","text":"","tags":["Proxy Tunneling"]},{"location":"services/google_translate/#indicators","title":"Indicators","text":"<ul> <li>Monitor your infrastructure for high frequency of requests to <code>https://translate.google.com</code></li> </ul>","tags":["Proxy Tunneling"]},{"location":"services/google_translate/#references","title":"References","text":"","tags":["Proxy Tunneling"]}]}